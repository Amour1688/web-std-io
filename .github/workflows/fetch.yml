name: fetch

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - "**.js"
      - "package.json"
      - ".github/workflows/ci.yml"

jobs:
  test:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
        node:
          - 14
          - 12
          - engines
        project:
          - fetch
        exclude:
          # On Windows, run tests with only the LTS environments.
          - os: windows-latest
            node: engines
          - os: windows-latest
            node: "14"
          # On macOS, run tests with only the LTS environments.
          - os: macOS-latest
            node: engines
          - os: macOS-latest
            node: "14"

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Get Node.JS version from package.json
        if: matrix.node == 'engines'
        id: get-version
        run: echo ::set-output name=node::$(npx --q minimum-node-version)

      - uses: actions/setup-node@v2-beta
        if: matrix.node != 'engines'
        with:
          node-version: ${{ matrix.node }}

      - uses: actions/setup-node@v2-beta
        if: matrix.node == 'engines'
        with:
          node-version: ${{steps.get-version.outputs.node}}

      - name: Restore yarn cache
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install

      - run: yarn --cwd ${{matrix.project}} test -- --colors
        if: matrix.node != 'engines'

      - name: Test without coverage
        if: matrix.node == 'engines'
        run: |
          yarn add esm
          npx mocha --prefix ${{matrix.project}} -r esm --colors

      # upload coverage only once
      - name: Coveralls
        uses: coverallsapp/github-action@master
        if: matrix.node == '12' && matrix.os == 'ubuntu-latest'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
